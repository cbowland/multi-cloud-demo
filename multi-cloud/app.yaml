apiVersion: v1                      
kind: Namespace
metadata:
  name: multi-cloud
---
apiVersion: app.k8s.io/v1beta1
kind: Application
metadata:
  name: hello
  namespace: multi-cloud
spec:
  componentKinds:
  - group: apps.open-cluster-management.io
    kind: Subscription
  descriptor: {}
  selector:
    matchExpressions:
      - key: app
        operator: In
        values: 
          - hello
---
apiVersion: apps.open-cluster-management.io/v1
kind: Channel
metadata:
  annotations:
    apps.open-cluster-management.io/reconcile-rate: high
  name: hello-channel
  namespace: multi-cloud
spec:
  type: Git
  pathname: 'https://gitlab.com/gitlab-com/alliances/ibm-red-hat/sandbox/customer-k/multi-cloud-demo.git'
  secretRef:
    name: gitlab-access-token
---
apiVersion: apps.open-cluster-management.io/v1
kind: Subscription
metadata:
  annotations:
    apps.open-cluster-management.io/git-path: deployment/dev
    apps.open-cluster-management.io/git-branch: main
    apps.open-cluster-management.io/reconcile-rate: "off"
    apps.open-cluster-management.io/reconcile-option: merge
  labels:
    app: hello
  name: hello-dev-subscription
  namespace: multi-cloud
spec:
  channel: multi-cloud/hello-channel
  placement:
    placementRef:
      kind: PlacementRule
      name: hello-dev-placement
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  labels:
    app: hello
  name: hello-dev-placement
  namespace: multi-cloud
spec:
  clusterSelector:
    matchLabels:
      'app-env-hello': 'development'
---
apiVersion: apps.open-cluster-management.io/v1
kind: Subscription
metadata:
  annotations:
    apps.open-cluster-management.io/git-path: deployment/prod
    apps.open-cluster-management.io/git-branch: main
    apps.open-cluster-management.io/reconcile-rate: "off"
    apps.open-cluster-management.io/reconcile-option: merge
  labels:
    app: hello
  name: hello-prod-subscription
  namespace: multi-cloud
spec:
  channel: multi-cloud/hello-channel
  placement:
    placementRef:
      kind: PlacementRule
      name: hello-prod-placement
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  labels:
    app: hello
  name: hello-prod-placement
  namespace: multi-cloud
spec:
  clusterSelector:
    matchLabels:
      'app-env-hello': 'production'
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-namespace-multi-cloud
  namespace: multi-cloud
  annotations:
    policy.open-cluster-management.io/standards: NIST-CSF
    policy.open-cluster-management.io/categories: PR.IP Information Protection Processes and Procedures
    policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-namespace-prod-ns
      spec:
        remediationAction: enforce # will be overridden by remediationAction in parent policy
        severity: low
        namespaceSelector:
          exclude: ["kube-*"]
          include: ["default"]
        object-templates:
          - complianceType: musthave
            objectDefinition:
              kind: Namespace # must have namespace 'prod'
              apiVersion: v1
              metadata:
                name: multi-cloud
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-policy-namespace-multi-cloud
  namespace: multi-cloud
placementRef:
  name: placement-policy-namespace-multi-cloud
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-namespace-multi-cloud
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-policy-namespace-multi-cloud
  namespace: multi-cloud
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      []  # selects all clusters if not specified

